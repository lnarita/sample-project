buildscript {
    ext {
        kotlin_version = "1.2.50"
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlin_version}")
        classpath 'com.netflix.nebula:gradle-lint-plugin:latest.release'
    }
}

allprojects {
    apply plugin: 'nebula.lint'
    gradleLint.rules = ['all-dependency'] // add as many rules here as you'd like
    gradleLint.rules += 'unused-dependency'
}

allprojects {
    repositories {
        mavenCentral()
        jcenter()
    }
}

subprojects {
    apply plugin: "java"
    apply plugin: "kotlin"

    apply plugin: "eclipse"
    apply plugin: "idea"

    group = "org.slello"

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    compileJava.options.encoding = "UTF-8"
    defaultTasks = ["clean", "build"]


    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    configurations.all {
        exclude group: "log4j"
        exclude group: "org.apache.tomcat.embed"
        exclude module: "spring-boot-starter-tomcat"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.8"
}

task stage {
    dependsOn 'slello-web-service:build'
    doLast {
        delete fileTree(dir: "slello-web-service/build", exclude: "libs")
        delete fileTree(dir: "slello-web-service/build/libs", exclude: "*.jar")
    }
}